version: '3.4'

x-cache-from:
  - &api-cache-from
    cache_from:
      - ${NGINX_IMAGE:-quay.io/api-platform/nginx}
      - ${PHP_IMAGE:-quay.io/api-platform/php}

x-react-env:
  - &react-env
    environment:
      - REACT_APP_API_ENTRYPOINT=${HTTP_OR_SSL}api.${DOMAIN_NAME}

services:
  traefik:
    image: traefik:v2.0
    command: --api.insecure --providers.docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"

  php:
    build:
      context: ${FOLDER_LOCATION}/api
      target: api_platform_php
      <<: *api-cache-from
    image: ${PHP_IMAGE:-quay.io/api-platform/php}
    depends_on:
      - db
    environment:
      - APP_ENV=${APP_ENV}
      - TRUSTED_HOSTS=^((${SUBDOMAINS_LIST}\.)?${DOMAIN_NAME})$$
      - CORS_ALLOW_ORIGIN=^(${HTTP_OR_SSL}(${SUBDOMAINS_LIST}.)?${DOMAIN_NAME})$$
      - DATABASE_URL=postgres://${DATABASE_USER}:${DATABASE_PASS}@db/${DATABASE_NAME}
    volumes:
      - ${FOLDER_LOCATION}/api:/srv/api:rw,cached
      - ${FOLDER_LOCATION}/api/docker/php/conf.d/api-platform.dev.ini/:/usr/local/etc/php/conf.d/api-platform.ini

  api:
    build:
      context: ${FOLDER_LOCATION}/api
      target: api_platform_nginx
      <<: *api-cache-from
    image: ${NGINX_IMAGE:-quay.io/api-platform/nginx}
    depends_on:
      - php
    volumes:
      - ${FOLDER_LOCATION}/api/public:/srv/api/public:ro
    labels:
      - traefik.http.routers.api.rule=Host(`api.${DOMAIN_NAME}`)

  db:
    image: postgres:10-alpine
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_PASSWORD=${DATABASE_PASS}
      - POSTGRES_USER=${DATABASE_USER}
    volumes:
      - db-data:/var/lib/postgresql/data:rw
    labels:
      - traefik.http.routers.db.rule=Host(`db.${DOMAIN_NAME}`)

  mercure:
    image: dunglas/mercure
    environment:
      - ALLOW_ANONYMOUS=1
      - CORS_ALLOWED_ORIGINS=${HTTP_OR_SSL}(${SUBDOMAINS_LIST}\.)?${DOMAIN_NAME}
      - DEMO=1
      - JWT_KEY=!ChangeMe!
      - PUBLISH_ALLOWED_ORIGINS=${HTTP_OR_SSL}mercure.${DOMAIN_NAME}
    labels:
      - traefik.http.routers.mercure.rule=Host(`mercure.${DOMAIN_NAME}`)

  client:
    build:
      context: ${FOLDER_LOCATION}/client
      target: api_platform_client_development
      cache_from:
        - ${CLIENT_IMAGE:-quay.io/api-platform/client}
    image: ${CLIENT_IMAGE:-quay.io/api-platform/client}
    <<: *react-env
    volumes:
      - ${FOLDER_LOCATION}/client:/usr/src/client:rw,cached
    labels:
      - traefik.http.routers.client.rule=HostRegexp(`{subdomains:(www.)?}${DOMAIN_NAME}`)

  admin:
    build:
      context: ${FOLDER_LOCATION}/admin
      target: api_platform_admin_development
      cache_from:
        - ${ADMIN_IMAGE:-quay.io/api-platform/admin}
    <<: *react-env
    image: ${ADMIN_IMAGE:-quay.io/api-platform/admin}
    volumes:
      - ${FOLDER_LOCATION}/admin:/usr/src/admin:rw,cached
    labels:
      - traefik.http.routers.admin.rule=Host(`admin.${DOMAIN_NAME}`)

volumes:
  db-data: {}
